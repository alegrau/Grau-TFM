{
    "pipes": [],
    "interfaces": [
        {
            "name": "AccordionItem",
            "id": "interface-AccordionItem-521e200e2a5615112359fae6dc7ea85ef3017a9824182aadcb5ee41c3003328c3c5136dc3206a59bb33f2ddc550ea23c55d506fdef37693b8e2eea0ad8b6ba55",
            "file": "src/app/Component/accordion/accordion.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\ninterface AccordionItem {\r\n  title: string;\r\n  content: string;\r\n  isOpen: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-accordion',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './accordion.component.html',\r\n  styleUrl: './accordion.component.css'\r\n})\r\nexport class AccordionComponent {\r\n  @Input() items: AccordionItem[] = [];\r\n\r\n  toggleAccordion(item: AccordionItem) {\r\n    item.isOpen = !item.isOpen;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-23c11020a2831beb3fa02ee911a75b64009c31bb46f73a01145c2560cb13b7f7e641105b678bd8fb01a5a199117001f3da4a78351d29d85d213ed7b82982091f",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-521e200e2a5615112359fae6dc7ea85ef3017a9824182aadcb5ee41c3003328c3c5136dc3206a59bb33f2ddc550ea23c55d506fdef37693b8e2eea0ad8b6ba55",
            "file": "src/app/Component/accordion/accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "AccordionItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "toggleAccordion",
                    "args": [
                        {
                            "name": "item",
                            "type": "AccordionItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "AccordionItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\ninterface AccordionItem {\r\n  title: string;\r\n  content: string;\r\n  isOpen: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-accordion',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './accordion.component.html',\r\n  styleUrl: './accordion.component.css'\r\n})\r\nexport class AccordionComponent {\r\n  @Input() items: AccordionItem[] = [];\r\n\r\n  toggleAccordion(item: AccordionItem) {\r\n    item.isOpen = !item.isOpen;\r\n  }\r\n}\r\n",
            "styleUrl": "./accordion.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"accordion-container\">\r\n  <div class=\"accordion\">\r\n    <div *ngFor=\"let item of items\" class=\"accordion-item\">\r\n      <button class=\"accordion-header\" (click)=\"toggleAccordion(item)\">\r\n        {{ item.title }}\r\n        <span class=\"material-icons chevron\">\r\n          {{ item.isOpen ? 'expand_less' : 'expand_more' }}\r\n        </span>\r\n      </button>\r\n      <div class=\"accordion-content\" [style.max-height]=\"item.isOpen ? content.scrollHeight + 'px' : '0'\" #content>\r\n        <p>{{ item.content }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "AlertBoxComponent",
            "id": "component-AlertBoxComponent-81d537077586888c3b354a02134884aee82b9e7e6552d41627bd318b428c80e9916d03b1d4dc603e164e6611f6bea2f6bf9d3c75b1c1143bc1eccfb00fd1eca6",
            "file": "src/app/Component/alert-box/alert-box.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-alert-box",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./alert-box.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"info\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"info\" | \"success\" | \"warning\" | \"error\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIcon"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIcon } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"alert-box\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-alert-box',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIcon],\r\n  templateUrl: './alert-box.component.html',\r\n  styleUrl: './alert-box.component.css'\r\n})\r\nexport class AlertBoxComponent {\r\n\r\n  @Input() type: \"info\" | \"success\" | \"warning\" | \"error\" = \"info\";\r\n  @Input() icon: string = 'info';\r\n  @Input() title: string = '';\r\n  @Input() message: string = '';\r\n\r\n  @Output() close = new EventEmitter<void>(); // Output event for close button\r\n\r\n  onClose() {\r\n    this.close.emit();\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.type)\r\n\r\n  }\r\n}\r\n",
            "styleUrl": "./alert-box.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\" class=\"alert-box\">\r\n  <div class=\"content\">\r\n    <i class=\"material-icons left-icon\">{{ icon }}</i>\r\n    <div class=\"info-content\">\r\n      <span class=\"title\">{{ title }}</span>\r\n      <span class=\"message\">{{ message }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"actions\">\r\n    <button class=\"btn-action\">\r\n      <span>Action</span>\r\n    </button>\r\n    <div class=\"line\"></div>\r\n    <button class=\"btn-close\">\r\n      <i class=\"material-icons close-icon\">highlight_off</i>\r\n    </button>\r\n  </div>\r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f2ca13425bbe72a184538396767fc93c936e9ca185d439336f76eac5e97adca12ef2f33e5e96aa3aef8422b2517e1ba07e90c5a9d6ba936213acac54d3c00e87",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'angular';\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced.  * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n<style>\r\n  :host {\r\n    --bright-blue: oklch(51.01% 0.274 263.83);\r\n    --electric-violet: oklch(53.18% 0.28 296.97);\r\n    --french-violet: oklch(47.66% 0.246 305.88);\r\n    --vivid-pink: oklch(69.02% 0.277 332.77);\r\n    --hot-red: oklch(61.42% 0.238 15.34);\r\n    --orange-red: oklch(63.32% 0.24 31.68);\r\n\r\n    --gray-900: oklch(19.37% 0.006 300.98);\r\n    --gray-700: oklch(36.98% 0.014 302.71);\r\n    --gray-400: oklch(70.9% 0.015 304.04);\r\n\r\n    --red-to-pink-to-purple-vertical-gradient: linear-gradient(\r\n      180deg,\r\n      var(--orange-red) 0%,\r\n      var(--vivid-pink) 50%,\r\n      var(--electric-violet) 100%\r\n    );\r\n\r\n    --red-to-pink-to-purple-horizontal-gradient: linear-gradient(\r\n      90deg,\r\n      var(--orange-red) 0%,\r\n      var(--vivid-pink) 50%,\r\n      var(--electric-violet) 100%\r\n    );\r\n\r\n    --pill-accent: var(--bright-blue);\r\n\r\n    font-family: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 3.125rem;\r\n    color: var(--gray-900);\r\n    font-weight: 500;\r\n    line-height: 100%;\r\n    letter-spacing: -0.125rem;\r\n    margin: 0;\r\n    font-family: \"Inter Tight\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\r\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\r\n      \"Segoe UI Symbol\";\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n    color: var(--gray-700);\r\n  }\r\n\r\n  main {\r\n    width: 100%;\r\n    min-height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    box-sizing: inherit;\r\n    position: relative;\r\n  }\r\n\r\n  .angular-logo {\r\n    max-width: 9.2rem;\r\n  }\r\n\r\n  .content {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 100%;\r\n    max-width: 700px;\r\n    margin-bottom: 3rem;\r\n  }\r\n\r\n  .content h1 {\r\n    margin-top: 1.75rem;\r\n  }\r\n\r\n  .content p {\r\n    margin-top: 1.5rem;\r\n  }\r\n\r\n  .divider {\r\n    width: 1px;\r\n    background: var(--red-to-pink-to-purple-vertical-gradient);\r\n    margin-inline: 0.5rem;\r\n  }\r\n\r\n  .pill-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n    flex-wrap: wrap;\r\n    gap: 1.25rem;\r\n  }\r\n\r\n  .pill {\r\n    display: flex;\r\n    align-items: center;\r\n    --pill-accent: var(--bright-blue);\r\n    background: color-mix(in srgb, var(--pill-accent) 5%, transparent);\r\n    color: var(--pill-accent);\r\n    padding-inline: 0.75rem;\r\n    padding-block: 0.375rem;\r\n    border-radius: 2.75rem;\r\n    border: 0;\r\n    transition: background 0.3s ease;\r\n    font-family: var(--inter-font);\r\n    font-size: 0.875rem;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 1.4rem;\r\n    letter-spacing: -0.00875rem;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .pill:hover {\r\n    background: color-mix(in srgb, var(--pill-accent) 15%, transparent);\r\n  }\r\n\r\n  .pill-group .pill:nth-child(6n + 1) {\r\n    --pill-accent: var(--bright-blue);\r\n  }\r\n  .pill-group .pill:nth-child(6n + 2) {\r\n    --pill-accent: var(--french-violet);\r\n  }\r\n  .pill-group .pill:nth-child(6n + 3),\r\n  .pill-group .pill:nth-child(6n + 4),\r\n  .pill-group .pill:nth-child(6n + 5) {\r\n    --pill-accent: var(--hot-red);\r\n  }\r\n\r\n  .pill-group svg {\r\n    margin-inline-start: 0.25rem;\r\n  }\r\n\r\n  .social-links {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.73rem;\r\n    margin-top: 1.5rem;\r\n  }\r\n\r\n  .social-links path {\r\n    transition: fill 0.3s ease;\r\n    fill: var(--gray-400);\r\n  }\r\n\r\n  .social-links a:hover svg path {\r\n    fill: var(--gray-900);\r\n  }\r\n\r\n  @media screen and (max-width: 650px) {\r\n    .content {\r\n      flex-direction: column;\r\n      width: max-content;\r\n    }\r\n\r\n    .divider {\r\n      height: 1px;\r\n      width: 100%;\r\n      background: var(--red-to-pink-to-purple-horizontal-gradient);\r\n      margin-block: 1.5rem;\r\n    }\r\n  }\r\n</style>\r\n\r\n<main class=\"main\">\r\n  <div class=\"content\">\r\n    <div class=\"left-side\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 982 239\"\r\n        fill=\"none\"\r\n        class=\"angular-logo\"\r\n      >\r\n        <g clip-path=\"url(#a)\">\r\n          <path\r\n            fill=\"url(#b)\"\r\n            d=\"M388.676 191.625h30.849L363.31 31.828h-35.758l-56.215 159.797h30.848l13.174-39.356h60.061l13.256 39.356Zm-65.461-62.675 21.602-64.311h1.227l21.602 64.311h-44.431Zm126.831-7.527v70.202h-28.23V71.839h27.002v20.374h1.392c2.782-6.71 7.2-12.028 13.255-15.956 6.056-3.927 13.584-5.89 22.503-5.89 8.264 0 15.465 1.8 21.684 5.318 6.137 3.518 10.964 8.673 14.319 15.382 3.437 6.71 5.074 14.81 4.992 24.383v76.175h-28.23v-71.92c0-8.019-2.046-14.237-6.219-18.819-4.173-4.5-9.819-6.791-17.102-6.791-4.91 0-9.328 1.063-13.174 3.272-3.846 2.128-6.792 5.237-9.001 9.328-2.046 4.009-3.191 8.918-3.191 14.728ZM589.233 239c-10.147 0-18.82-1.391-26.103-4.091-7.282-2.7-13.092-6.382-17.511-10.964-4.418-4.582-7.528-9.655-9.164-15.219l25.448-6.136c1.145 2.372 2.782 4.663 4.991 6.954 2.209 2.291 5.155 4.255 8.837 5.81 3.683 1.554 8.428 2.291 14.074 2.291 8.019 0 14.647-1.964 19.884-5.81 5.237-3.845 7.856-10.227 7.856-19.064v-22.665h-1.391c-1.473 2.946-3.601 5.892-6.383 9.001-2.782 3.109-6.464 5.645-10.965 7.691-4.582 2.046-10.228 3.109-17.101 3.109-9.165 0-17.511-2.209-25.039-6.545-7.446-4.337-13.42-10.883-17.757-19.474-4.418-8.673-6.628-19.473-6.628-32.565 0-13.091 2.21-24.301 6.628-33.383 4.419-9.082 10.311-15.955 17.839-20.7 7.528-4.746 15.874-7.037 25.039-7.037 7.037 0 12.846 1.145 17.347 3.518 4.582 2.373 8.182 5.236 10.883 8.51 2.7 3.272 4.746 6.382 6.137 9.327h1.554v-19.8h27.821v121.749c0 10.228-2.454 18.737-7.364 25.447-4.91 6.709-11.538 11.7-20.048 15.055-8.509 3.355-18.165 4.991-28.884 4.991Zm.245-71.266c5.974 0 11.047-1.473 15.302-4.337 4.173-2.945 7.446-7.118 9.573-12.519 2.21-5.482 3.274-12.027 3.274-19.637 0-7.609-1.064-14.155-3.274-19.8-2.127-5.646-5.318-10.064-9.491-13.255-4.174-3.11-9.329-4.746-15.384-4.746s-11.537 1.636-15.792 4.91c-4.173 3.272-7.365 7.772-9.492 13.418-2.128 5.727-3.191 12.191-3.191 19.392 0 7.2 1.063 13.745 3.273 19.228 2.127 5.482 5.318 9.736 9.573 12.764 4.174 3.027 9.41 4.582 15.629 4.582Zm141.56-26.51V71.839h28.23v119.786h-27.412v-21.273h-1.227c-2.7 6.709-7.119 12.191-13.338 16.446-6.137 4.255-13.747 6.382-22.748 6.382-7.855 0-14.81-1.718-20.783-5.237-5.974-3.518-10.72-8.591-14.075-15.382-3.355-6.709-5.073-14.891-5.073-24.464V71.839h28.312v71.921c0 7.609 2.046 13.664 6.219 18.083 4.173 4.5 9.655 6.709 16.365 6.709 4.173 0 8.183-.982 12.111-3.028 3.927-2.045 7.118-5.072 9.655-9.082 2.537-4.091 3.764-9.164 3.764-15.218Zm65.707-109.395v159.796h-28.23V31.828h28.23Zm44.841 162.169c-7.61 0-14.402-1.391-20.457-4.091-6.055-2.7-10.883-6.791-14.32-12.109-3.518-5.319-5.237-11.946-5.237-19.801 0-6.791 1.228-12.355 3.765-16.773 2.536-4.419 5.891-7.937 10.228-10.637 4.337-2.618 9.164-4.664 14.647-6.055 5.4-1.391 11.046-2.373 16.856-3.027 7.037-.737 12.683-1.391 17.102-1.964 4.337-.573 7.528-1.555 9.574-2.782 1.963-1.309 3.027-3.273 3.027-5.973v-.491c0-5.891-1.718-10.391-5.237-13.664-3.518-3.191-8.51-4.828-15.056-4.828-6.955 0-12.356 1.473-16.447 4.5-4.009 3.028-6.71 6.546-8.183 10.719l-26.348-3.764c2.046-7.282 5.483-13.336 10.31-18.328 4.746-4.909 10.638-8.59 17.511-11.045 6.955-2.455 14.565-3.682 22.912-3.682 5.809 0 11.537.654 17.265 2.045s10.965 3.6 15.711 6.71c4.746 3.109 8.51 7.282 11.455 12.6 2.864 5.318 4.337 11.946 4.337 19.883v80.184h-27.166v-16.446h-.9c-1.719 3.355-4.092 6.464-7.201 9.328-3.109 2.864-6.955 5.237-11.619 6.955-4.828 1.718-10.229 2.536-16.529 2.536Zm7.364-20.701c5.646 0 10.556-1.145 14.729-3.354 4.173-2.291 7.364-5.237 9.655-9.001 2.292-3.763 3.355-7.854 3.355-12.273v-14.155c-.9.737-2.373 1.391-4.5 2.046-2.128.654-4.419 1.145-7.037 1.636-2.619.491-5.155.9-7.692 1.227-2.537.328-4.746.655-6.628.901-4.173.572-8.019 1.472-11.292 2.781-3.355 1.31-5.973 3.11-7.855 5.401-1.964 2.291-2.864 5.318-2.864 8.918 0 5.237 1.882 9.164 5.728 11.782 3.682 2.782 8.51 4.091 14.401 4.091Zm64.643 18.328V71.839h27.412v19.965h1.227c2.21-6.955 5.974-12.274 11.292-16.038 5.319-3.763 11.456-5.645 18.329-5.645 1.555 0 3.355.082 5.237.163 1.964.164 3.601.328 4.91.573v25.938c-1.227-.41-3.109-.819-5.646-1.146a58.814 58.814 0 0 0-7.446-.49c-5.155 0-9.738 1.145-13.829 3.354-4.091 2.209-7.282 5.236-9.655 9.164-2.373 3.927-3.519 8.427-3.519 13.5v70.448h-28.312ZM222.077 39.192l-8.019 125.923L137.387 0l84.69 39.192Zm-53.105 162.825-57.933 33.056-57.934-33.056 11.783-28.556h92.301l11.783 28.556ZM111.039 62.675l30.357 73.803H80.681l30.358-73.803ZM7.937 165.115 0 39.192 84.69 0 7.937 165.115Z\"\r\n          />\r\n          <path\r\n            fill=\"url(#c)\"\r\n            d=\"M388.676 191.625h30.849L363.31 31.828h-35.758l-56.215 159.797h30.848l13.174-39.356h60.061l13.256 39.356Zm-65.461-62.675 21.602-64.311h1.227l21.602 64.311h-44.431Zm126.831-7.527v70.202h-28.23V71.839h27.002v20.374h1.392c2.782-6.71 7.2-12.028 13.255-15.956 6.056-3.927 13.584-5.89 22.503-5.89 8.264 0 15.465 1.8 21.684 5.318 6.137 3.518 10.964 8.673 14.319 15.382 3.437 6.71 5.074 14.81 4.992 24.383v76.175h-28.23v-71.92c0-8.019-2.046-14.237-6.219-18.819-4.173-4.5-9.819-6.791-17.102-6.791-4.91 0-9.328 1.063-13.174 3.272-3.846 2.128-6.792 5.237-9.001 9.328-2.046 4.009-3.191 8.918-3.191 14.728ZM589.233 239c-10.147 0-18.82-1.391-26.103-4.091-7.282-2.7-13.092-6.382-17.511-10.964-4.418-4.582-7.528-9.655-9.164-15.219l25.448-6.136c1.145 2.372 2.782 4.663 4.991 6.954 2.209 2.291 5.155 4.255 8.837 5.81 3.683 1.554 8.428 2.291 14.074 2.291 8.019 0 14.647-1.964 19.884-5.81 5.237-3.845 7.856-10.227 7.856-19.064v-22.665h-1.391c-1.473 2.946-3.601 5.892-6.383 9.001-2.782 3.109-6.464 5.645-10.965 7.691-4.582 2.046-10.228 3.109-17.101 3.109-9.165 0-17.511-2.209-25.039-6.545-7.446-4.337-13.42-10.883-17.757-19.474-4.418-8.673-6.628-19.473-6.628-32.565 0-13.091 2.21-24.301 6.628-33.383 4.419-9.082 10.311-15.955 17.839-20.7 7.528-4.746 15.874-7.037 25.039-7.037 7.037 0 12.846 1.145 17.347 3.518 4.582 2.373 8.182 5.236 10.883 8.51 2.7 3.272 4.746 6.382 6.137 9.327h1.554v-19.8h27.821v121.749c0 10.228-2.454 18.737-7.364 25.447-4.91 6.709-11.538 11.7-20.048 15.055-8.509 3.355-18.165 4.991-28.884 4.991Zm.245-71.266c5.974 0 11.047-1.473 15.302-4.337 4.173-2.945 7.446-7.118 9.573-12.519 2.21-5.482 3.274-12.027 3.274-19.637 0-7.609-1.064-14.155-3.274-19.8-2.127-5.646-5.318-10.064-9.491-13.255-4.174-3.11-9.329-4.746-15.384-4.746s-11.537 1.636-15.792 4.91c-4.173 3.272-7.365 7.772-9.492 13.418-2.128 5.727-3.191 12.191-3.191 19.392 0 7.2 1.063 13.745 3.273 19.228 2.127 5.482 5.318 9.736 9.573 12.764 4.174 3.027 9.41 4.582 15.629 4.582Zm141.56-26.51V71.839h28.23v119.786h-27.412v-21.273h-1.227c-2.7 6.709-7.119 12.191-13.338 16.446-6.137 4.255-13.747 6.382-22.748 6.382-7.855 0-14.81-1.718-20.783-5.237-5.974-3.518-10.72-8.591-14.075-15.382-3.355-6.709-5.073-14.891-5.073-24.464V71.839h28.312v71.921c0 7.609 2.046 13.664 6.219 18.083 4.173 4.5 9.655 6.709 16.365 6.709 4.173 0 8.183-.982 12.111-3.028 3.927-2.045 7.118-5.072 9.655-9.082 2.537-4.091 3.764-9.164 3.764-15.218Zm65.707-109.395v159.796h-28.23V31.828h28.23Zm44.841 162.169c-7.61 0-14.402-1.391-20.457-4.091-6.055-2.7-10.883-6.791-14.32-12.109-3.518-5.319-5.237-11.946-5.237-19.801 0-6.791 1.228-12.355 3.765-16.773 2.536-4.419 5.891-7.937 10.228-10.637 4.337-2.618 9.164-4.664 14.647-6.055 5.4-1.391 11.046-2.373 16.856-3.027 7.037-.737 12.683-1.391 17.102-1.964 4.337-.573 7.528-1.555 9.574-2.782 1.963-1.309 3.027-3.273 3.027-5.973v-.491c0-5.891-1.718-10.391-5.237-13.664-3.518-3.191-8.51-4.828-15.056-4.828-6.955 0-12.356 1.473-16.447 4.5-4.009 3.028-6.71 6.546-8.183 10.719l-26.348-3.764c2.046-7.282 5.483-13.336 10.31-18.328 4.746-4.909 10.638-8.59 17.511-11.045 6.955-2.455 14.565-3.682 22.912-3.682 5.809 0 11.537.654 17.265 2.045s10.965 3.6 15.711 6.71c4.746 3.109 8.51 7.282 11.455 12.6 2.864 5.318 4.337 11.946 4.337 19.883v80.184h-27.166v-16.446h-.9c-1.719 3.355-4.092 6.464-7.201 9.328-3.109 2.864-6.955 5.237-11.619 6.955-4.828 1.718-10.229 2.536-16.529 2.536Zm7.364-20.701c5.646 0 10.556-1.145 14.729-3.354 4.173-2.291 7.364-5.237 9.655-9.001 2.292-3.763 3.355-7.854 3.355-12.273v-14.155c-.9.737-2.373 1.391-4.5 2.046-2.128.654-4.419 1.145-7.037 1.636-2.619.491-5.155.9-7.692 1.227-2.537.328-4.746.655-6.628.901-4.173.572-8.019 1.472-11.292 2.781-3.355 1.31-5.973 3.11-7.855 5.401-1.964 2.291-2.864 5.318-2.864 8.918 0 5.237 1.882 9.164 5.728 11.782 3.682 2.782 8.51 4.091 14.401 4.091Zm64.643 18.328V71.839h27.412v19.965h1.227c2.21-6.955 5.974-12.274 11.292-16.038 5.319-3.763 11.456-5.645 18.329-5.645 1.555 0 3.355.082 5.237.163 1.964.164 3.601.328 4.91.573v25.938c-1.227-.41-3.109-.819-5.646-1.146a58.814 58.814 0 0 0-7.446-.49c-5.155 0-9.738 1.145-13.829 3.354-4.091 2.209-7.282 5.236-9.655 9.164-2.373 3.927-3.519 8.427-3.519 13.5v70.448h-28.312ZM222.077 39.192l-8.019 125.923L137.387 0l84.69 39.192Zm-53.105 162.825-57.933 33.056-57.934-33.056 11.783-28.556h92.301l11.783 28.556ZM111.039 62.675l30.357 73.803H80.681l30.358-73.803ZM7.937 165.115 0 39.192 84.69 0 7.937 165.115Z\"\r\n          />\r\n        </g>\r\n        <defs>\r\n          <radialGradient\r\n            id=\"c\"\r\n            cx=\"0\"\r\n            cy=\"0\"\r\n            r=\"1\"\r\n            gradientTransform=\"rotate(118.122 171.182 60.81) scale(205.794)\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stop-color=\"#FF41F8\" />\r\n            <stop offset=\".707\" stop-color=\"#FF41F8\" stop-opacity=\".5\" />\r\n            <stop offset=\"1\" stop-color=\"#FF41F8\" stop-opacity=\"0\" />\r\n          </radialGradient>\r\n          <linearGradient\r\n            id=\"b\"\r\n            x1=\"0\"\r\n            x2=\"982\"\r\n            y1=\"192\"\r\n            y2=\"192\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stop-color=\"#F0060B\" />\r\n            <stop offset=\"0\" stop-color=\"#F0070C\" />\r\n            <stop offset=\".526\" stop-color=\"#CC26D5\" />\r\n            <stop offset=\"1\" stop-color=\"#7702FF\" />\r\n          </linearGradient>\r\n          <clipPath id=\"a\"><path fill=\"#fff\" d=\"M0 0h982v239H0z\" /></clipPath>\r\n        </defs>\r\n      </svg>\r\n      <h1>Hello, {{ title }}</h1>\r\n      <p>Congratulations! Your app is running. 🎉</p>\r\n    </div>\r\n    <div class=\"divider\" role=\"separator\" aria-label=\"Divider\"></div>\r\n    <div class=\"right-side\">\r\n      <div class=\"pill-group\">\r\n        @for (item of [\r\n          { title: 'Explore the Docs', link: 'https://angular.dev' },\r\n          { title: 'Learn with Tutorials', link: 'https://angular.dev/tutorials' },\r\n          { title: 'CLI Docs', link: 'https://angular.dev/tools/cli' },\r\n          { title: 'Angular Language Service', link: 'https://angular.dev/tools/language-service' },\r\n          { title: 'Angular DevTools', link: 'https://angular.dev/tools/devtools' },\r\n        ]; track item.title) {\r\n          <a\r\n            class=\"pill\"\r\n            [href]=\"item.link\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            <span>{{ item.title }}</span>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              height=\"14\"\r\n              viewBox=\"0 -960 960 960\"\r\n              width=\"14\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <path\r\n                d=\"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h560v-280h80v280q0 33-23.5 56.5T760-120H200Zm188-212-56-56 372-372H560v-80h280v280h-80v-144L388-332Z\"\r\n              />\r\n            </svg>\r\n          </a>\r\n        }\r\n      </div>\r\n      <div class=\"social-links\">\r\n        <a\r\n          href=\"https://github.com/angular/angular\"\r\n          aria-label=\"Github\"\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n        >\r\n          <svg\r\n            width=\"25\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 25 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            alt=\"Github\"\r\n          >\r\n            <path\r\n              d=\"M12.3047 0C5.50634 0 0 5.50942 0 12.3047C0 17.7423 3.52529 22.3535 8.41332 23.9787C9.02856 24.0946 9.25414 23.7142 9.25414 23.3871C9.25414 23.0949 9.24389 22.3207 9.23876 21.2953C5.81601 22.0377 5.09414 19.6444 5.09414 19.6444C4.53427 18.2243 3.72524 17.8449 3.72524 17.8449C2.61064 17.082 3.81137 17.0973 3.81137 17.0973C5.04697 17.1835 5.69604 18.3647 5.69604 18.3647C6.79321 20.2463 8.57636 19.7029 9.27978 19.3881C9.39052 18.5924 9.70736 18.0499 10.0591 17.7423C7.32641 17.4347 4.45429 16.3765 4.45429 11.6618C4.45429 10.3185 4.9311 9.22133 5.72065 8.36C5.58222 8.04931 5.16694 6.79833 5.82831 5.10337C5.82831 5.10337 6.85883 4.77319 9.2121 6.36459C10.1965 6.09082 11.2424 5.95546 12.2883 5.94931C13.3342 5.95546 14.3801 6.09082 15.3644 6.36459C17.7023 4.77319 18.7328 5.10337 18.7328 5.10337C19.3942 6.79833 18.9789 8.04931 18.8559 8.36C19.6403 9.22133 20.1171 10.3185 20.1171 11.6618C20.1171 16.3888 17.2409 17.4296 14.5031 17.7321C14.9338 18.1012 15.3337 18.8559 15.3337 20.0084C15.3337 21.6552 15.3183 22.978 15.3183 23.3779C15.3183 23.7009 15.5336 24.0854 16.1642 23.9623C21.0871 22.3484 24.6094 17.7341 24.6094 12.3047C24.6094 5.50942 19.0999 0 12.3047 0Z\"\r\n            />\r\n          </svg>\r\n        </a>\r\n        <a\r\n          href=\"https://twitter.com/angular\"\r\n          aria-label=\"Twitter\"\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n        >\r\n          <svg\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            alt=\"Twitter\"\r\n          >\r\n            <path\r\n              d=\"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"\r\n            />\r\n          </svg>\r\n        </a>\r\n        <a\r\n          href=\"https://www.youtube.com/channel/UCbn1OgGei-DV7aSRo_HaAiw\"\r\n          aria-label=\"Youtube\"\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n        >\r\n          <svg\r\n            width=\"29\"\r\n            height=\"20\"\r\n            viewBox=\"0 0 29 20\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            alt=\"Youtube\"\r\n          >\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              clip-rule=\"evenodd\"\r\n              d=\"M27.4896 1.52422C27.9301 1.96749 28.2463 2.51866 28.4068 3.12258C29.0004 5.35161 29.0004 10 29.0004 10C29.0004 10 29.0004 14.6484 28.4068 16.8774C28.2463 17.4813 27.9301 18.0325 27.4896 18.4758C27.0492 18.9191 26.5 19.2389 25.8972 19.4032C23.6778 20 14.8068 20 14.8068 20C14.8068 20 5.93586 20 3.71651 19.4032C3.11363 19.2389 2.56449 18.9191 2.12405 18.4758C1.68361 18.0325 1.36732 17.4813 1.20683 16.8774C0.613281 14.6484 0.613281 10 0.613281 10C0.613281 10 0.613281 5.35161 1.20683 3.12258C1.36732 2.51866 1.68361 1.96749 2.12405 1.52422C2.56449 1.08095 3.11363 0.76113 3.71651 0.596774C5.93586 0 14.8068 0 14.8068 0C14.8068 0 23.6778 0 25.8972 0.596774C26.5 0.76113 27.0492 1.08095 27.4896 1.52422ZM19.3229 10L11.9036 5.77905V14.221L19.3229 10Z\"\r\n            />\r\n          </svg>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>\r\n\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced.  * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * End of Placeholder  * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n\r\n<router-outlet />\r\n"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-014624863da0469fb44e52410cb02d9036d5673ff0d786cc10bacb0b5f8e8eebb6d3449c8a7ace35bab7c931b88ae8a9e366ef4957805e2459bfcbc7953dd778",
            "file": "src/app/Component/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "altText",
                    "defaultValue": "'Avatar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "initials",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "photoUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "\"large\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"large\" | \"medium\" | \"small\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'initials'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"initials\" | \"photo\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"avatar\", ...args].filter(Boolean)\r\n\r\n\r\n@Component({\r\n  selector: 'app-avatar',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './avatar.component.html',\r\n  styleUrl: './avatar.component.css'\r\n})\r\nexport class AvatarComponent {\r\n  @Input() type: 'initials' | 'photo' = 'initials';\r\n  @Input() initials: string = '';\r\n  @Input() photoUrl: string = '';\r\n  @Input() altText: string = 'Avatar';\r\n  @Input() size: \"large\" | \"medium\" | \"small\" = \"large\";\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.size)\r\n  }\r\n}\r\n",
            "styleUrl": "./avatar.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 22
                    }
                }
            },
            "templateData": "<div class=\"avatar\" [ngClass]=\"classes\">\r\n  <ng-container *ngIf=\"type === 'initials'; else photoAvatar\">\r\n    <span class=\"initials\">{{ initials }}</span>\r\n  </ng-container>\r\n  <ng-template #photoAvatar>\r\n    <img [src]=\"photoUrl\" [alt]=\"altText\">\r\n  </ng-template>\r\n</div>"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-ce34e91e3f4049b19137df2dd1aa311cd095bc17f6a06640cee7f186df120a3a8ffbb1f3388efd9f89e5b47b902159804b9fa1c2106a0f455825e2056dd92fc8",
            "file": "src/app/Component/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'blue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"blue\" | \"grey\" | \"green\" | \"orange\" | \"red\"",
                    "decorators": []
                },
                {
                    "name": "hasLeftIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasRightIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rightIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"large\" | \"small\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"badge\", ...args].filter(Boolean)\r\n\r\n\r\n@Component({\r\n  selector: 'app-badge',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './badge.component.html',\r\n  styleUrl: './badge.component.css'\r\n})\r\n\r\nexport class BadgeComponent {\r\n  @Input()\r\n  label: string = '';\r\n  @Input() size: 'large' | 'small' = 'large';\r\n  @Input() color: 'blue' | 'grey' | 'green' | 'orange' | 'red' = 'blue';\r\n  @Input() hasLeftIcon: boolean = true;\r\n  @Input() hasRightIcon: boolean = true;\r\n  @Input() leftIcon: string = '';\r\n  @Input() rightIcon: string = '';\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.size, this.color)\r\n  }\r\n}\r\n",
            "styleUrl": "./badge.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 26
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\">\r\n  <mat-icon *ngIf=\"hasLeftIcon\" class=\"left-icon\">{{ leftIcon }}</mat-icon>\r\n  <span>{{ label }}</span>\r\n  <mat-icon *ngIf=\"hasRightIcon\" class=\"right-icon\">{{ rightIcon }}</mat-icon>\r\n</div>"
        },
        {
            "name": "BreadcrumbComponent",
            "id": "component-BreadcrumbComponent-01123c678e083db6d179b706a4ce0509d62a263e26957abd5bc18d3aff3e208ad3a1df5ad391d6c1ab68e586719e9011366bed344003766174237bdcb812e5df",
            "file": "src/app/Component/breadcrumb/breadcrumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "steps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"breadcrumb\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrl: './breadcrumb.component.css'\r\n})\r\nexport class BreadcrumbComponent {\r\n\r\n  @Input() steps: string[] = [];\r\n\r\n  public get classes(): string[] {\r\n    return getStyles()\r\n\r\n  }\r\n}\r\n",
            "styleUrl": "./breadcrumb.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 18
                    }
                }
            },
            "templateData": "<div class=\"breadcrumb\">\r\n  <ng-container *ngFor=\"let step of steps; let last = last\">\r\n    <span [ngClass]=\"{ 'last-step': last }\">{{ step }}</span>\r\n    <i *ngIf=\"!last\" class=\"material-icons\">chevron_right</i>\r\n  </ng-container>\r\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-c3bd323da00016e22e16a3a7d43440094eeceddea5e6076a399bcaba62f8e742efe65e543735e36f9ea1bed026ab8e3c8fb60482667ae55ec324f8adfe79b9f7",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 837,
                            "end": 851,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 838,
                                "end": 846,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a910bbf8db6685f37bec4930aa00b48388e13032628f1b0aeb3654a8d1863179cf58c9a02b813528ee81aad89122dc5ebd9e90901499a14ba606f110f74a6617-1",
            "file": "src/app/Component/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasLeftIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasRightIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rightIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "\"large\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"large\" | \"medium\" | \"small\"",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "\"active\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"active\" | \"disabled\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"primary\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"primary\" | \"secondary\" | \"tertiary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n\r\nconst getStyles = (...args: string[]) => [\"button\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.css'\r\n})\r\n\r\nexport class ButtonComponent {\r\n  @Input()\r\n  label: string = '';\r\n\r\n  @Input()\r\n  type: \"primary\" | \"secondary\" | \"tertiary\" = \"primary\";\r\n\r\n  @Input()\r\n  size: \"large\" | \"medium\" | \"small\" = \"large\";\r\n\r\n  @Input() hasLeftIcon: boolean = true;\r\n  @Input() hasRightIcon: boolean = true;\r\n  @Input() leftIcon: string = '';\r\n  @Input() rightIcon: string = '';\r\n\r\n  @Input() state: \"active\" | \"disabled\" = \"active\";\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.type, this.size, this.state)\r\n\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 33
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button [ngClass]=\"classes\">\r\n  <mat-icon *ngIf=\"hasLeftIcon\" class=\"left-icon\">{{ leftIcon }}</mat-icon>\r\n  <span>{{ label }}</span>\r\n  <mat-icon *ngIf=\"hasRightIcon\" class=\"right-icon\">{{ rightIcon }}</mat-icon>\r\n</button>"
        },
        {
            "name": "ButtonIconComponent",
            "id": "component-ButtonIconComponent-2cca078ae698de6646c5ccab5477fba37a72ca9f38a6b8522869e1c24bc0de70dac8c57a14d7551e7936f78f0ea7e972a2e84e84b9445a77afaf2c4577667a2e",
            "file": "src/app/Component/button-icon/button-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button-icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "\"large\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"large\" | \"medium\" | \"small\"",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "\"active\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"active\" | \"disabled\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"primary\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"primary\" | \"secondary\" | \"tertiary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"button-icon\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-button-icon',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './button-icon.component.html',\r\n  styleUrl: './button-icon.component.css'\r\n})\r\nexport class ButtonIconComponent {\r\n  @Input()\r\n  type: \"primary\" | \"secondary\" | \"tertiary\" = \"primary\";\r\n\r\n  @Input()\r\n  size: \"large\" | \"medium\" | \"small\" = \"large\";\r\n\r\n  @Input() icon: string = '';\r\n\r\n  @Input() state: \"active\" | \"disabled\" = \"active\";\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.type, this.size, this.state)\r\n\r\n  }\r\n}\r\n",
            "styleUrl": "./button-icon.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 25
                    }
                }
            },
            "templateData": "<button [ngClass]=\"classes\">\r\n  <mat-icon class=\"left-icon\">{{ icon }}</mat-icon>\r\n</button>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-674755e02426b34c42e44433d5cbb0e65ab2686bb50d5ab571cc7e2708fe19a77847976781dc217e7280f7c3d97f5004a4ab1b63503cbf392ff01662c212f226",
            "file": "src/app/Component/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "orientation",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"vertical\" | \"horizontal\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst getStyles = (...args: string[]) => [\"card\", ...args].filter(Boolean)\r\n\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './card.component.html',\r\n  styleUrl: './card.component.css'\r\n})\r\nexport class CardComponent {\r\n\r\n  @Input() orientation: 'vertical' | 'horizontal' = 'horizontal';\r\n\r\n  @Input() title: string = ''\r\n\r\n  @Input() description: string = ''\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.orientation)\r\n  }\r\n}\r\n",
            "styleUrl": "./card.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 24
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\" [class.disabled]=\"disabled\">\r\n  <div class=\"image\">\r\n    <i class=\"material-icons\">\r\n      hide_image\r\n    </i>\r\n  </div>\r\n  <div class=\"info\">\r\n    <span class=\"title\">{{title}}</span>\r\n    <span class=\"description\">{{description}}</span>\r\n  </div>\r\n</div>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-17a93c0bb5589aa5070ad8e03f49d7d568dce96e1da492b71a44e5df2202ccf5c5af8dbe116f97aa6ca3160ce501f8ece8c0f3cdb6c044ec1da0ded073f31e65",
            "file": "src/app/Component/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "'valid'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"valid\" | \"invalid\" | \"disabled\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "stateChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleCheckbox",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst getStyles = (...args: string[]) => [\"checkbox\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrl: './checkbox.component.css'\r\n})\r\n\r\nexport class CheckboxComponent {\r\n\r\n  @Input() state: 'valid' | 'invalid' | 'disabled' = 'valid';\r\n\r\n  @Input() label: string = '';\r\n\r\n  @Output() stateChange = new EventEmitter<string>();\r\n\r\n  toggleCheckbox() {\r\n    if (this.state === 'disabled') return;\r\n\r\n    if (this.state === 'valid') {\r\n      this.state = 'invalid';\r\n    } else {\r\n      this.state = 'valid';\r\n    }\r\n\r\n    this.stateChange.emit(this.state);\r\n  }\r\n\r\n  onFocus() {\r\n    if (this.state !== 'disabled') {\r\n      this.state = 'valid';\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    if (this.state === 'valid') {\r\n      this.state = 'valid';\r\n    }\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.state)\r\n\r\n  }\r\n\r\n}\r\n\r\n",
            "styleUrl": "./checkbox.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 46
                    }
                }
            },
            "templateData": "<div class=\"checkbox\" [ngClass]=\"classes\" tabindex=\"0\" (click)=\"toggleCheckbox()\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n  <input type=\"checkbox\" [disabled]=\"state === 'disabled'\" />\r\n  <label>{{ label }}</label>\r\n</div>"
        },
        {
            "name": "ChipsComponent",
            "id": "component-ChipsComponent-c6eca508b1a95db5ffa8df13a5607f10dca63a658c9387abfb51dd37d47bf3d9d92ac4fbc5ab17c5a88ed910334f6dea736da5a6874238ee721a53b08b8f7881",
            "file": "src/app/Component/chips/chips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chips",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./chips.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconButton",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"chips\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-chips',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './chips.component.html',\r\n  styleUrl: './chips.component.css'\r\n})\r\nexport class ChipsComponent {\r\n\r\n  @Input() hasIcon: boolean = false;\r\n  @Input() icon: string = '';\r\n  @Input() label: string = '';\r\n  @Input() hasButton: boolean = false;\r\n  @Input() iconButton: string = '';\r\n  @Input() disabled: boolean = false;\r\n\r\n  public get classes(): string[] {\r\n    return getStyles()\r\n  }\r\n}\r\n",
            "styleUrl": "./chips.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 23
                    }
                }
            },
            "templateData": "<div class=\"chip\">\r\n  <i *ngIf=\"hasIcon\" [class.disabled]=\"disabled\" class=\"material-icons icon\">{{ icon }}</i>\r\n  <span>{{ label }}</span>\r\n  <button *ngIf=\"hasButton\" [disabled]=\"disabled\">\r\n    <i class=\"material-icons icon\">{{ iconButton }}</i>\r\n  </button>\r\n</div>"
        },
        {
            "name": "ColourComponent",
            "id": "component-ColourComponent-0841c114c1efd371c48da1fcae842fcbafda8827f7c1f90f424dc457541b59128d642e57f1d1830b14f8817f847277a5734d42cbedddef5485ac88860703ea18",
            "file": "src/app/Style/colour/colour.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colour",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./colour.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "palette",
                    "defaultValue": "[\r\n    {\r\n      title: 'Primary',\r\n      colour: [\r\n        { name: 'Primary-100', hex: '#F5F9FF', class: 'primary-100' },\r\n        { name: 'Primary-200', hex: '#D1E3FF', class: 'primary-200' },\r\n        { name: 'Primary-300', hex: '#8FBCFF', class: 'primary-300' },\r\n        { name: 'Primary-400', hex: '#428EFF', class: 'primary-400' },\r\n        { name: 'Primary-500', hex: '#0066FF', class: 'primary-500' },\r\n        { name: 'Primary-600', hex: '#0058DB', class: 'primary-600' },\r\n        { name: 'Primary-700', hex: '#0041A3', class: 'primary-700' },\r\n        { name: 'Primary-800', hex: '#070D56', class: 'primary-800' },\r\n        { name: 'Primary-900', hex: '#05093D', class: 'primary-900' },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Secondary',\r\n      colour: [\r\n        { name: 'Secondary-100', hex: '#DEF6FF', class: 'secondary-100' },\r\n        { name: 'Secondary-200', hex: '#B6EFFF', class: 'secondary-200' },\r\n        { name: 'Secondary-300', hex: '#75E5FF', class: 'secondary-300' },\r\n        { name: 'Secondary-400', hex: '#2CD8FF', class: 'secondary-400' },\r\n        { name: 'Secondary-500', hex: '#00C7FA', class: 'secondary-500' },\r\n        { name: 'Secondary-600', hex: '#009FD4', class: 'secondary-600' },\r\n        { name: 'Secondary-700', hex: '#007EAB', class: 'secondary-700' },\r\n        { name: 'Secondary-800', hex: '#065874', class: 'secondary-800' },\r\n        { name: 'Secondary-900', hex: '#04384D', class: 'secondary-900' },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Neutral',\r\n      colour: [\r\n        { name: 'Neutral-100', hex: '#FFFFFF', class: 'neutral-100' },\r\n        { name: 'Neutral-200', hex: '#F6F9FF', class: 'neutral-200' },\r\n        { name: 'Neutral-300', hex: '#EFF3FA', class: 'neutral-300' },\r\n        { name: 'Neutral-400', hex: '#DBE2F0', class: 'neutral-400' },\r\n        { name: 'Neutral-500', hex: '#95A2BD', class: 'neutral-500' },\r\n        { name: 'Neutral-600', hex: '#616C84', class: 'neutral-600' },\r\n        { name: 'Neutral-700', hex: '#3E495E', class: 'neutral-700' },\r\n        { name: 'Neutral-800', hex: '#252B37', class: 'neutral-800' },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Success',\r\n      colour: [\r\n        { name: 'Success-100', hex: '#E6FFEE', class: 'success-100' },\r\n        { name: 'Success-200', hex: '#B2FBCA', class: 'success-200' },\r\n        { name: 'Success-300', hex: '#69E996', class: 'success-300' },\r\n        { name: 'Success-400', hex: '#00AF3D', class: 'success-400' },\r\n        { name: 'Success-500', hex: '#007A23', class: 'success-500' },\r\n        { name: 'Success-600', hex: '#085E27', class: 'success-600' },\r\n        { name: 'Success-700', hex: '#004217', class: 'success-700' },\r\n      ]\r\n    },\r\n    {\r\n      title: 'Warning',\r\n      colour: [\r\n        { name: 'Warning-100', hex: '#FFFAEB', class: 'warning-100' },\r\n        { name: 'Warning-200', hex: '#FFF1C6', class: 'warning-200' },\r\n        { name: 'Warning-300', hex: '#FFE088', class: 'warning-300' },\r\n        { name: 'Warning-400', hex: '#FFB72A', class: 'warning-400' },\r\n        { name: 'Warning-500', hex: '#F99107', class: 'warning-500' },\r\n        { name: 'Warning-600', hex: '#DD6A02', class: 'warning-600' },\r\n        { name: 'Warning-700', hex: '#B74906', class: 'warning-700' },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Error',\r\n      colour: [\r\n        { name: 'Error-100', hex: '#FFF1F2', class: 'error-100' },\r\n        { name: 'Error-200', hex: '#FFC4C9', class: 'error-200' },\r\n        { name: 'Error-300', hex: '#E56671', class: 'error-300' },\r\n        { name: 'Error-400', hex: '#F01224', class: 'error-400' },\r\n        { name: 'Error-500', hex: '#CB0717', class: 'error-500' },\r\n        { name: 'Error-600', hex: '#8A121C', class: 'error-600' },\r\n        { name: 'Error-700', hex: '#4B040A', class: 'error-700' },\r\n      ]\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-colour',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './colour.component.html',\r\n  styleUrl: './colour.component.css'\r\n})\r\nexport class ColourComponent {\r\n\r\n  palette = [\r\n    {\r\n      title: 'Primary',\r\n      colour: [\r\n        { name: 'Primary-100', hex: '#F5F9FF', class: 'primary-100' },\r\n        { name: 'Primary-200', hex: '#D1E3FF', class: 'primary-200' },\r\n        { name: 'Primary-300', hex: '#8FBCFF', class: 'primary-300' },\r\n        { name: 'Primary-400', hex: '#428EFF', class: 'primary-400' },\r\n        { name: 'Primary-500', hex: '#0066FF', class: 'primary-500' },\r\n        { name: 'Primary-600', hex: '#0058DB', class: 'primary-600' },\r\n        { name: 'Primary-700', hex: '#0041A3', class: 'primary-700' },\r\n        { name: 'Primary-800', hex: '#070D56', class: 'primary-800' },\r\n        { name: 'Primary-900', hex: '#05093D', class: 'primary-900' },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Secondary',\r\n      colour: [\r\n        { name: 'Secondary-100', hex: '#DEF6FF', class: 'secondary-100' },\r\n        { name: 'Secondary-200', hex: '#B6EFFF', class: 'secondary-200' },\r\n        { name: 'Secondary-300', hex: '#75E5FF', class: 'secondary-300' },\r\n        { name: 'Secondary-400', hex: '#2CD8FF', class: 'secondary-400' },\r\n        { name: 'Secondary-500', hex: '#00C7FA', class: 'secondary-500' },\r\n        { name: 'Secondary-600', hex: '#009FD4', class: 'secondary-600' },\r\n        { name: 'Secondary-700', hex: '#007EAB', class: 'secondary-700' },\r\n        { name: 'Secondary-800', hex: '#065874', class: 'secondary-800' },\r\n        { name: 'Secondary-900', hex: '#04384D', class: 'secondary-900' },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Neutral',\r\n      colour: [\r\n        { name: 'Neutral-100', hex: '#FFFFFF', class: 'neutral-100' },\r\n        { name: 'Neutral-200', hex: '#F6F9FF', class: 'neutral-200' },\r\n        { name: 'Neutral-300', hex: '#EFF3FA', class: 'neutral-300' },\r\n        { name: 'Neutral-400', hex: '#DBE2F0', class: 'neutral-400' },\r\n        { name: 'Neutral-500', hex: '#95A2BD', class: 'neutral-500' },\r\n        { name: 'Neutral-600', hex: '#616C84', class: 'neutral-600' },\r\n        { name: 'Neutral-700', hex: '#3E495E', class: 'neutral-700' },\r\n        { name: 'Neutral-800', hex: '#252B37', class: 'neutral-800' },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Success',\r\n      colour: [\r\n        { name: 'Success-100', hex: '#E6FFEE', class: 'success-100' },\r\n        { name: 'Success-200', hex: '#B2FBCA', class: 'success-200' },\r\n        { name: 'Success-300', hex: '#69E996', class: 'success-300' },\r\n        { name: 'Success-400', hex: '#00AF3D', class: 'success-400' },\r\n        { name: 'Success-500', hex: '#007A23', class: 'success-500' },\r\n        { name: 'Success-600', hex: '#085E27', class: 'success-600' },\r\n        { name: 'Success-700', hex: '#004217', class: 'success-700' },\r\n      ]\r\n    },\r\n    {\r\n      title: 'Warning',\r\n      colour: [\r\n        { name: 'Warning-100', hex: '#FFFAEB', class: 'warning-100' },\r\n        { name: 'Warning-200', hex: '#FFF1C6', class: 'warning-200' },\r\n        { name: 'Warning-300', hex: '#FFE088', class: 'warning-300' },\r\n        { name: 'Warning-400', hex: '#FFB72A', class: 'warning-400' },\r\n        { name: 'Warning-500', hex: '#F99107', class: 'warning-500' },\r\n        { name: 'Warning-600', hex: '#DD6A02', class: 'warning-600' },\r\n        { name: 'Warning-700', hex: '#B74906', class: 'warning-700' },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Error',\r\n      colour: [\r\n        { name: 'Error-100', hex: '#FFF1F2', class: 'error-100' },\r\n        { name: 'Error-200', hex: '#FFC4C9', class: 'error-200' },\r\n        { name: 'Error-300', hex: '#E56671', class: 'error-300' },\r\n        { name: 'Error-400', hex: '#F01224', class: 'error-400' },\r\n        { name: 'Error-500', hex: '#CB0717', class: 'error-500' },\r\n        { name: 'Error-600', hex: '#8A121C', class: 'error-600' },\r\n        { name: 'Error-700', hex: '#4B040A', class: 'error-700' },\r\n      ]\r\n    }\r\n  ]\r\n\r\n}\r\n",
            "styleUrl": "./colour.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"body\">\r\n  <h1>Colour</h1>\r\n  <div *ngFor=\"let palette of palette\" class=\"palete\">\r\n    <h2>{{palette.title}}</h2>\r\n    <div class=\"row-colour\">\r\n      <div *ngFor=\"let colour of palette.colour\" class=\"colour-info\">\r\n        <div [ngClass]=\"[colour.class]\" class=\"circle\"></div>\r\n        <p class=\"title\"> <strong>{{colour.name }}</strong> <br>\r\n          {{colour.hex}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-07f894be6f38e12f30e1e7e5d9e999c27c78ce2f0be03c15c8c5f39207229e147892a2fd1fdb54e935c4f04f03c2162e39a22c28cdc64e027ea15824ddf0f3c9",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ButtonComponent } from './button.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent],\r\n  template: `<header>\r\n    <div class=\"storybook-header\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            [primary]=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.storybook-header svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header h1 {\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header button + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.storybook-header .welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-92f4cc9cc0054ccf9d578fc1ebe06b6d7ed1424277151dbedd6cfe73ba15609d9919dcba6e9acbd021b43117d9ce1f28adf6630c681037299b01a4c726c15a8e",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HeaderComponent } from './header.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  standalone: true,\r\n  imports: [CommonModule, HeaderComponent],\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section class=\"storybook-page\">\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\n.storybook-page h2 {\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page p {\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\n.storybook-page ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.storybook-page .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-page .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-08fcc65fc0c568ecc9d00f874ab96e395e8b9988e1ff3fa9790aa108385bd4c3c916d62cec184d2927f5104cf4313c399ac13b60a2c9f9dac4ea385c8b3c34ee",
            "file": "src/app/Component/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./radio-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hasError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Option 1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<Event>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRadioChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst getStyles = (...args: string[]) => [\"radio-button\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-radio-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './radio-button.component.html',\r\n  styleUrl: './radio-button.component.css'\r\n})\r\nexport class RadioButtonComponent {\r\n\r\n  @Input() label: string = 'Option 1';\r\n  @Input() isDisabled: boolean = false;\r\n  @Input() hasError: boolean = false;\r\n\r\n  @Output() change: EventEmitter<Event> = new EventEmitter<Event>();\r\n\r\n  onRadioChange(event: Event): void {\r\n    this.change.emit(event);\r\n  };\r\n\r\n  public get classes(): string[] {\r\n    return getStyles()\r\n\r\n  }\r\n}\r\n",
            "styleUrl": "./radio-button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 26
                    }
                }
            },
            "templateData": "<div class=\"container\">\r\n  <div class=\"radio-container\">\r\n    <input type=\"radio\" id=\"radio\" name=\"radios\" class=\"radio-input\" [ngClass]=\"{ 'error': hasError }\"\r\n      (change)=\"onRadioChange($event)\">\r\n    <label for=\"radio\" class=\"radio-label\">{{label}}</label>\r\n  </div>\r\n\r\n  <div class=\"radio-container\">\r\n    <input type=\"radio\" id=\"radio\" name=\"radios\" class=\"radio-input\" [disabled]=\"isDisabled\"\r\n      [ngClass]=\"{ 'error': hasError }\" (change)=\"onRadioChange($event)\" dis>\r\n    <label for=\"radio\" class=\"radio-label\">{{label}}</label>\r\n  </div>\r\n</div>"
        },
        {
            "name": "ScaleComponent",
            "id": "component-ScaleComponent-dc47fe5db0efeff9543e6f6d26686c9bf12983e79c39e88e0dfaa1341779e435d8208fd40eb18b0ccdbf2e4c42ea9b40d32ea93866e9df1c6a9f5366f18ca59d",
            "file": "src/app/Style/scale/scale.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scale",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./scale.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "scale",
                    "defaultValue": "[\r\n    { label: '4px', class: 'square-4px' },\r\n    { label: '8px', class: 'square-8px' },\r\n    { label: '12px', class: 'square-12px' },\r\n    { label: '16px', class: 'square-16px' },\r\n    { label: '20px', class: 'square-20px' },\r\n    { label: '24px', class: 'square-24px' },\r\n    { label: '28px', class: 'square-28px' },\r\n    { label: '32px', class: 'square-32px' },\r\n    { label: '36px', class: 'square-36px' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-scale',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './scale.component.html',\r\n  styleUrl: './scale.component.css'\r\n})\r\nexport class ScaleComponent {\r\n\r\n  scale = [\r\n    { label: '4px', class: 'square-4px' },\r\n    { label: '8px', class: 'square-8px' },\r\n    { label: '12px', class: 'square-12px' },\r\n    { label: '16px', class: 'square-16px' },\r\n    { label: '20px', class: 'square-20px' },\r\n    { label: '24px', class: 'square-24px' },\r\n    { label: '28px', class: 'square-28px' },\r\n    { label: '32px', class: 'square-32px' },\r\n    { label: '36px', class: 'square-36px' },\r\n  ]\r\n\r\n}\r\n",
            "styleUrl": "./scale.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <div class=\"size\">\r\n    <div *ngFor=\"let item of scale\" class=\"item\">\r\n      <div [ngClass]=\"item.class\" class=\"square\">\r\n      </div>\r\n      <span>{{item.label}}</span>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"icon\">\r\n    <mat-icon *ngFor=\"let item of scale\" [ngClass]=\"item.class\">account_circle</mat-icon>\r\n  </div>\r\n</div>"
        },
        {
            "name": "TextAreaComponent",
            "id": "component-TextAreaComponent-9aa637b67acb0e653fdb849eff1a958ff5efc64e21efaeebd98eab59ea562978b8029ea0677447d9ab107ebf327d43f873106088bb585cf308c6e99b3400b9b4",
            "file": "src/app/Component/text-area/text-area.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-area",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-area.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasCounter",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasHelpText",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "helpText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"text-area\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-text-area',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './text-area.component.html',\r\n  styleUrl: './text-area.component.css'\r\n})\r\n\r\nexport class TextAreaComponent {\r\n\r\n  @Input() hasCounter: boolean = true;\r\n  @Input() hasLabel: boolean = true;\r\n  @Input() label: string = '';\r\n\r\n  @Input() placeholder: string = '';\r\n  @Input() hasHelpText: boolean = true;\r\n  @Input() helpText: string = '';\r\n  @Input() disabled: boolean = false;\r\n  @Input() error: boolean = false;\r\n\r\n  @Input() maxLength: number = 100;\r\n  @Input() currentLength: number = 0;\r\n\r\n  onInput(event: Event): void {\r\n    const input = event.target as HTMLTextAreaElement;\r\n    this.currentLength = input.value.length;\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    return getStyles()\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./text-area.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 35
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\" class=\"textarea-container\">\r\n  <div class=\"label-container\" *ngIf=\"hasLabel\">\r\n    <label for=\"myTextarea\">{{label}}</label>\r\n    <label for=\"myTextarea\" class=\"label-counter\" *ngIf=\"hasCounter\">{{currentLength}}/{{maxLength}}</label>\r\n  </div>\r\n  <div class=\"subcontainer\">\r\n    <textarea id=\"myTextarea\" [placeholder]=\"placeholder\" (input)=\"onInput($event)\" [maxLength]=\"maxLength\"\r\n      [disabled]=\"disabled\" (invalid)=\"error\">\r\n    </textarea>\r\n    <p class=\"help-text\" *ngIf=\"hasHelpText\">{{helpText}}</p>\r\n  </div>\r\n</div>"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-fc42ab33107bb55e41d1ba2e94746483879726da93719275f4dbf248c69395169ab323bec6b2d4d28e0b3a0cd3657e2d8ea95e1caa820c5349cccdb3da526567",
            "file": "src/app/Component/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasHelpText",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "helpText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "invalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"large\" | \"small\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleInputChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleInputClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"text-input\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './text-input.component.html',\r\n  styleUrl: './text-input.component.css'\r\n})\r\n\r\n\r\nexport class TextInputComponent {\r\n  @Input() size: 'large' | 'small' = 'large';\r\n  @Input() hasLabel: boolean = true;\r\n  @Input() label: string = '';\r\n  @Input() placeholder: string = '';\r\n  @Input() hasHelpText: boolean = true;\r\n  @Input() helpText: string = '';\r\n  @Input() disabled: boolean = false;\r\n  @Input() invalid: boolean = false;\r\n\r\n  @Output() onClick = new EventEmitter<Event>();\r\n  @Output() onChange = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.size)\r\n\r\n  }\r\n\r\n  handleInputClick(event: Event) {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  handleInputChange(event: Event) {\r\n    this.onChange.emit(event);\r\n  }\r\n}\r\n",
            "styleUrl": "./text-input.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 29
                    }
                }
            },
            "templateData": "<div class=\"container\">\r\n    <label *ngIf=\"hasLabel\" for=\"\">{{label}}</label>\r\n    <div class=\"subcontainer\">\r\n        <input [ngClass]=\"classes\" type=\"email\" placeholder=\"{{placeholder}}\" [disabled]=\"disabled\" (invalid)=\"invalid\">\r\n        <p *ngIf=\"hasHelpText\" class=\"help-text\">{{helpText}}</p>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ToastComponent",
            "id": "component-ToastComponent-8236bdbc6378476ff8e9a444c741dfbf1c2e7446dbf851d92d8099183b17c8fe8112eeb15374b96576b01dcbb8222a8ac3b47d409e5d5719ba555bb5f58a6b3e",
            "file": "src/app/Component/toast/toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toast",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toast.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"info\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"info\" | \"success\" | \"warning\" | \"error\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"badge\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-toast',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './toast.component.html',\r\n  styleUrl: './toast.component.css'\r\n})\r\nexport class ToastComponent {\r\n\r\n  @Input() type: \"info\" | \"success\" | \"warning\" | \"error\" = \"info\";\r\n  @Input() icon: string = 'info';\r\n  @Input() title: string = '';\r\n  @Input() message: string = '';\r\n\r\n  @Output() close = new EventEmitter<void>(); // Output event for close button\r\n\r\n  onClose() {\r\n    this.close.emit();\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.type)\r\n  }\r\n}\r\n",
            "styleUrl": "./toast.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\" class=\"toast\">\r\n  <div class=\"alert-it\">\r\n    <div class=\"alert-icon\">\r\n      <mat-icon class=\"left-icon\">{{ icon }}</mat-icon>\r\n    </div>\r\n    <div class=\"text-container\">\r\n      <span class=\"title\">{{ title }}</span>\r\n      <span class=\"message\">{{ message }}</span>\r\n    </div>\r\n  </div>\r\n  <button class=\"close-button\" (click)=\"onClose()\">\r\n    <mat-icon class=\"close-icon\">close</mat-icon>\r\n  </button>\r\n</div>"
        },
        {
            "name": "ToggleComponent",
            "id": "component-ToggleComponent-b517ecb698c6561b1d45cf6bceea46aefebc4d5da0113013a61dd236605c81bb82dd407b5acf25bc9eca974c7bf3d9560947252f0f31d882029419eb8d247571",
            "file": "src/app/Component/toggle/toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toggle",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./toggle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasLabelLeft",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hasLabelRight",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "labelLeftText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelRightText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-toggle',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './toggle.component.html',\r\n  styleUrl: './toggle.component.css'\r\n})\r\nexport class ToggleComponent {\r\n  @Input() checked: boolean = false;\r\n  @Input() focused: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n  @Input() hasLabelLeft: boolean = true;\r\n  @Input() labelLeftText: string = '';\r\n  @Input() hasLabelRight: boolean = true;\r\n  @Input() labelRightText: string = '';\r\n\r\n\r\n  toggle() {\r\n    if (!this.disabled) {\r\n      this.checked = !this.checked;\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./toggle.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"toggle-group\">\r\n    <label *ngIf=\"hasLabelLeft\" for=\"label-left\" class=\"label-left\">{{ labelLeftText }}</label>\r\n    <label class=\"toggle-container\" [class.disabled]=\"disabled\" [class.focused]=\"focused\">\r\n        <input type=\"checkbox\" class=\"toggle\" [checked]=\"checked\" (click)=\"toggle()\" [disabled]=\"disabled\"\r\n            [(ngModel)]=\"checked\">\r\n        <span class=\"toggle-slider\"></span>\r\n    </label>\r\n    <label *ngIf=\"hasLabelRight\" for=\"label-right\" class=\"label-right\">{{ labelRightText }}</label>\r\n</div>"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-55dc59102aa5ed0191aa3d76b8617581627525300480e86cecd2b7a81cdb133680ffc8e2d414c4acee5c5555ea765e4833e66d4741e03e40b996b3366396d3b8",
            "file": "src/app/Component/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nconst getStyles = (...args: string[]) => [\"tooltip\", ...args].filter(Boolean)\r\n\r\n@Component({\r\n  selector: 'app-tooltip',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrl: './tooltip.component.css'\r\n})\r\nexport class TooltipComponent {\r\n\r\n  @Input() label: string = '';\r\n  @Input() position: 'top' | 'bottom' | 'left' | 'right' = 'top'\r\n\r\n\r\n  public get classes(): string[] {\r\n    return getStyles(this.position)\r\n  }\r\n}\r\n",
            "styleUrl": "./tooltip.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 20
                    }
                }
            },
            "templateData": "<div class=\"tooltip-container\" [ngClass]=\"classes\">\r\n  <!-- <ng-content></ng-content> -->\r\n  <mat-icon class=\"mat-icons\">info</mat-icon>\r\n  <span class=\"tooltiptext\">\r\n    {{ label }}\r\n  </span>\r\n</div>"
        },
        {
            "name": "TypographyComponent",
            "id": "component-TypographyComponent-359c2255ca4698f5e69211e2799d07a161ca0861867655361bb8f9dffb4a60df10cda4c0c79b6135c858b250392411d536bb87ee02122fef44bad66014f6d90a",
            "file": "src/app/Style/typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./typography.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "typography",
                    "defaultValue": "[\r\n    {\r\n      text: [\r\n        { name: 'Display 1 - extrabold 40px', class: 'display-1' },\r\n        { name: 'Display 2 - extrabold 32px', class: 'display-2' },\r\n      ]\r\n    },\r\n    {\r\n      text: [\r\n        { name: 'Heading 1 - bold 27px', class: 'heading-1' },\r\n        { name: 'Heading 2 - bold 22px', class: 'heading-2' },\r\n        { name: 'Heading 3 - bold 18px', class: 'heading-3' },\r\n      ]\r\n    },\r\n    {\r\n      text: [\r\n        { name: 'Body 1 - regular 16px', class: 'body-1' },\r\n        { name: 'Body 2 - regular 14px', class: 'body-2' },\r\n      ]\r\n    },\r\n    {\r\n      text: [\r\n        { name: 'Small text 1 - regular 12px', class: 'small-1' },\r\n        { name: 'Small text 2 - regular 11px', class: 'small-2' },\r\n      ]\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-typography',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './typography.component.html',\r\n  styleUrl: './typography.component.css'\r\n})\r\nexport class TypographyComponent {\r\n\r\n  typography = [\r\n    {\r\n      text: [\r\n        { name: 'Display 1 - extrabold 40px', class: 'display-1' },\r\n        { name: 'Display 2 - extrabold 32px', class: 'display-2' },\r\n      ]\r\n    },\r\n    {\r\n      text: [\r\n        { name: 'Heading 1 - bold 27px', class: 'heading-1' },\r\n        { name: 'Heading 2 - bold 22px', class: 'heading-2' },\r\n        { name: 'Heading 3 - bold 18px', class: 'heading-3' },\r\n      ]\r\n    },\r\n    {\r\n      text: [\r\n        { name: 'Body 1 - regular 16px', class: 'body-1' },\r\n        { name: 'Body 2 - regular 14px', class: 'body-2' },\r\n      ]\r\n    },\r\n    {\r\n      text: [\r\n        { name: 'Small text 1 - regular 12px', class: 'small-1' },\r\n        { name: 'Small text 2 - regular 11px', class: 'small-2' },\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
            "styleUrl": "./typography.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <span *ngFor=\"let type of typography\" class=\"text\">\r\n    <span *ngFor=\"let size of type.text\" [ngClass]=\"[size.class]\">{{size.name}}</span>\r\n  </span>\r\n</div>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideRouter(routes), provideAnimationsAsync()]\r\n}"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/alert-box/alert-box.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"alert-box\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"avatar\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/badge/badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"badge\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/breadcrumb/breadcrumb.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"breadcrumb\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"button\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/button-icon/button-icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"button-icon\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/card/card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"card\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/checkbox/checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"checkbox\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/chips/chips.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"chips\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/radio-button/radio-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"radio-button\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/text-area/text-area.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"text-area\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"text-input\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/toast/toast.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"badge\", ...args].filter(Boolean)"
            },
            {
                "name": "getStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/Component/tooltip/tooltip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(...args: string[]) => [\"tooltip\", ...args].filter(Boolean)"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideRouter(routes), provideAnimationsAsync()]\r\n}"
                }
            ],
            "src/app/Component/alert-box/alert-box.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/alert-box/alert-box.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"alert-box\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/avatar/avatar.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"avatar\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/badge/badge.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/badge/badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"badge\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/breadcrumb/breadcrumb.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/breadcrumb/breadcrumb.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"breadcrumb\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/button/button.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"button\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/button-icon/button-icon.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/button-icon/button-icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"button-icon\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/card/card.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/card/card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"card\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/checkbox/checkbox.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/checkbox/checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"checkbox\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/chips/chips.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/chips/chips.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"chips\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/radio-button/radio-button.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/radio-button/radio-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"radio-button\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/text-area/text-area.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/text-area/text-area.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"text-area\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/text-input/text-input.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"text-input\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/toast/toast.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/toast/toast.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"badge\", ...args].filter(Boolean)"
                }
            ],
            "src/app/Component/tooltip/tooltip.component.ts": [
                {
                    "name": "getStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/Component/tooltip/tooltip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(...args: string[]) => [\"tooltip\", ...args].filter(Boolean)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/Component/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/accordion/accordion.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AccordionItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/alert-box/alert-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/alert-box/alert-box.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/avatar/avatar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/badge/badge.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/breadcrumb/breadcrumb.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/button-icon/button-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/button-icon/button-icon.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/card/card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/checkbox/checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/chips/chips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/chips/chips.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/radio-button/radio-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/text-area/text-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/text-area/text-area.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/toast/toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/toast/toast.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/toggle/toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/Component/tooltip/tooltip.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/Style/colour/colour.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColourComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/Style/scale/scale.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScaleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/Style/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}